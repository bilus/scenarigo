name: release
on:
  push:
    tags:
    - "v[0-9]+.[0-9]+.[0-9]+"
    - "v[0-9]+.[0-9]+.[0-9]+-rc[0-9]+"
jobs:
  matrix:
    runs-on: ubuntu-latest
    outputs:
      go-version: ${{ steps.matrix.outputs.versions }}
    steps:
    - name: Install Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.18.x
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        path: go/src/github.com/${{ github.repository }}
    - name: Generate matrix
      id: matrix
      working-directory: ./go/src/github.com/${{ github.repository }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        set -eu
        versions=$(make matrix)
        echo "::echo::on"
        echo "::set-output name=versions::$versions"
  goreleaser:
    needs: matrix
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        go-version: ${{ fromJson(needs.matrix.outputs.go-version) }}
    steps:
    - name: Install Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.18.x
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        path: go/src/github.com/${{ github.repository }}
    - name: Generate CHANGELOG
      working-directory: ./go/src/github.com/${{ github.repository }}
      run: RELEASE_VERSION=${{ github.ref_name }} make changelog/ci && cat .CHANGELOG.md
    - name: Build
      working-directory: ./go/src/github.com/${{ github.repository }}
      run: RELEASE_VERSION=${{ github.ref_name }} GO_VERSION=${{ matrix.go-version }} make build/ci
    - name: Run GoReleaser
      uses: goreleaser/goreleaser-action@v3
      with:
        version: latest
        args: release --rm-dist --release-notes .CHANGELOG.md
        workdir: ./go/src/github.com/${{ github.repository }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
